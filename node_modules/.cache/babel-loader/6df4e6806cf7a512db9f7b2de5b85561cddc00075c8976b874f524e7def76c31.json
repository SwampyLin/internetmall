{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nexport const messageSlice = createSlice({\n  name: 'message',\n  initialState: [],\n  reducers: {\n    createMessage(state, action) {\n      if (action.payload.success) {\n        state.push({\n          id: action.payload.id,\n          type: 'success',\n          title: '成功',\n          text: action.payload.message\n        });\n      } else {\n        var _action$payload, _action$payload2, _action$payload3;\n        state.push({\n          id: action.payload.id,\n          type: 'danger',\n          title: '錯誤',\n          text: Array.isArray((_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.message) ? (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.message.join('、') : (_action$payload3 = action.payload) === null || _action$payload3 === void 0 ? void 0 : _action$payload3.message\n        });\n      }\n    },\n    removeMessage(state, action) {\n      console.log('removeMessage', action.payload);\n      const index = state.findIndex(item => item === action.payload);\n      state.splice(index, 1);\n    }\n  }\n});\n\n//這裡建立的方法，可以被其他元件使用\n//creteAsyncThunk方法有兩個參數1.自定義名稱2.async function\nexport const createAsyncMessage = createAsyncThunk('message/createAsyncMessage', async function (payload, _ref) {\n  let {\n    dispatch,\n    requestId\n  } = _ref;\n  console.log('createAsyncMessage:', payload);\n  dispatch(messageSlice.actions.createMessage({\n    ...payload,\n    id: requestId\n  }));\n  setTimeout(() => {\n    dispatch(messageSlice.actions.removeMessage(requestId));\n  }, 3000);\n});\nexport const {\n  createMessage\n} = messageSlice.actions;\nexport default messageSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","messageSlice","name","initialState","reducers","createMessage","state","action","payload","success","push","id","type","title","text","message","_action$payload","_action$payload2","_action$payload3","Array","isArray","join","removeMessage","console","log","index","findIndex","item","splice","createAsyncMessage","_ref","dispatch","requestId","actions","setTimeout","reducer"],"sources":["C:/Users/REDZE/Desktop/project/CRA/cra/internetmall/src/slice/messageSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\n\r\nexport const messageSlice = createSlice({\r\n  name: 'message',\r\n  initialState: [],\r\n  reducers: {\r\n    createMessage(state, action) {\r\n      if (action.payload.success) {\r\n        state.push({\r\n          id: action.payload.id,\r\n          type: 'success',\r\n          title: '成功',\r\n          text: action.payload.message\r\n        })\r\n      } else {\r\n        state.push({\r\n          id: action.payload.id,\r\n          type: 'danger',\r\n          title: '錯誤',\r\n          text: Array.isArray(action.payload?.message)\r\n            ? action.payload?.message.join('、')\r\n            : action.payload?.message\r\n        })\r\n      }\r\n    },\r\n    removeMessage(state, action) {\r\n      console.log('removeMessage', action.payload)\r\n      const index = state.findIndex((item) => item === action.payload)\r\n      state.splice(index, 1)\r\n    }\r\n  }\r\n})\r\n\r\n//這裡建立的方法，可以被其他元件使用\r\n//creteAsyncThunk方法有兩個參數1.自定義名稱2.async function\r\nexport const createAsyncMessage = createAsyncThunk(\r\n  'message/createAsyncMessage',\r\n  async function (payload, { dispatch, requestId }) {\r\n    console.log('createAsyncMessage:', payload)\r\n    dispatch(\r\n      messageSlice.actions.createMessage({\r\n        ...payload,\r\n        id: requestId\r\n      })\r\n    )\r\n    setTimeout(() => {\r\n      dispatch(messageSlice.actions.removeMessage(requestId))\r\n    }, 3000)\r\n  }\r\n)\r\nexport const { createMessage } = messageSlice.actions\r\nexport default messageSlice.reducer\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,YAAY,GAAGF,WAAW,CAAC;EACtCG,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACRC,aAAaA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC3B,IAAIA,MAAM,CAACC,OAAO,CAACC,OAAO,EAAE;QAC1BH,KAAK,CAACI,IAAI,CAAC;UACTC,EAAE,EAAEJ,MAAM,CAACC,OAAO,CAACG,EAAE;UACrBC,IAAI,EAAE,SAAS;UACfC,KAAK,EAAE,IAAI;UACXC,IAAI,EAAEP,MAAM,CAACC,OAAO,CAACO;QACvB,CAAC,CAAC;MACJ,CAAC,MAAM;QAAA,IAAAC,eAAA,EAAAC,gBAAA,EAAAC,gBAAA;QACLZ,KAAK,CAACI,IAAI,CAAC;UACTC,EAAE,EAAEJ,MAAM,CAACC,OAAO,CAACG,EAAE;UACrBC,IAAI,EAAE,QAAQ;UACdC,KAAK,EAAE,IAAI;UACXC,IAAI,EAAEK,KAAK,CAACC,OAAO,EAAAJ,eAAA,GAACT,MAAM,CAACC,OAAO,cAAAQ,eAAA,uBAAdA,eAAA,CAAgBD,OAAO,CAAC,IAAAE,gBAAA,GACxCV,MAAM,CAACC,OAAO,cAAAS,gBAAA,uBAAdA,gBAAA,CAAgBF,OAAO,CAACM,IAAI,CAAC,GAAG,CAAC,IAAAH,gBAAA,GACjCX,MAAM,CAACC,OAAO,cAAAU,gBAAA,uBAAdA,gBAAA,CAAgBH;QACtB,CAAC,CAAC;MACJ;IACF,CAAC;IACDO,aAAaA,CAAChB,KAAK,EAAEC,MAAM,EAAE;MAC3BgB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEjB,MAAM,CAACC,OAAO,CAAC;MAC5C,MAAMiB,KAAK,GAAGnB,KAAK,CAACoB,SAAS,CAAEC,IAAI,IAAKA,IAAI,KAAKpB,MAAM,CAACC,OAAO,CAAC;MAChEF,KAAK,CAACsB,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;IACxB;EACF;AACF,CAAC,CAAC;;AAEF;AACA;AACA,OAAO,MAAMI,kBAAkB,GAAG7B,gBAAgB,CAChD,4BAA4B,EAC5B,gBAAgBQ,OAAO,EAAAsB,IAAA,EAA2B;EAAA,IAAzB;IAAEC,QAAQ;IAAEC;EAAU,CAAC,GAAAF,IAAA;EAC9CP,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEhB,OAAO,CAAC;EAC3CuB,QAAQ,CACN9B,YAAY,CAACgC,OAAO,CAAC5B,aAAa,CAAC;IACjC,GAAGG,OAAO;IACVG,EAAE,EAAEqB;EACN,CAAC,CACH,CAAC;EACDE,UAAU,CAAC,MAAM;IACfH,QAAQ,CAAC9B,YAAY,CAACgC,OAAO,CAACX,aAAa,CAACU,SAAS,CAAC,CAAC;EACzD,CAAC,EAAE,IAAI,CAAC;AACV,CACF,CAAC;AACD,OAAO,MAAM;EAAE3B;AAAc,CAAC,GAAGJ,YAAY,CAACgC,OAAO;AACrD,eAAehC,YAAY,CAACkC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}